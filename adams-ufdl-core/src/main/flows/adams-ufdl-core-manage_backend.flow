# Project: adams
# Date: 2020-06-29 17:25:15
# User: fracpete
# Charset: UTF-8
# Modules: adams-core,adams-event,adams-meta,adams-net,adams-rats-core,adams-spreadsheet,adams-terminal,adams-ufdl-core
#
adams.flow.control.Flow -annotation "For managing users, teams, projects and licenses.\\nUses host/user/password from the global UFDL Preferences." -error-handling ACTORS_DECIDE_TO_STOP_ON_ERROR -flow-execution-listener adams.flow.execution.NullListener -flow-restart-manager adams.flow.control.flowrestart.NullManager
 adams.flow.standalone.CallableActors
  adams.flow.sink.Display -name Info -short-title true -display-type adams.flow.core.displaytype.Default -writer adams.data.io.output.NullWriter
  adams.flow.sink.HistoryDisplay -name Errors -short-title true -display-type adams.flow.core.displaytype.Default -y -3
  adams.flow.sink.ProgressBar -display-type adams.flow.core.displaytype.Default -writer adams.gui.print.NullWriter -max @{max}
  adams.flow.sink.SpreadSheetDisplay -name Current -short-title true -display-type adams.flow.core.displaytype.Default -x -3 -cell-rendering-customizer adams.gui.core.spreadsheettable.DefaultCellRenderingCustomizer -allow-search true -writer adams.data.io.output.NullWriter
  adams.flow.control.Tee -name "clear output"
   adams.flow.control.ClearCallableDisplay -name "clear info" -callable Info
   adams.flow.control.CloseCallableDisplay -name "close info" -callable Info
   adams.flow.control.ClearCallableDisplay -name "clear errors" -callable Errors
   adams.flow.control.CloseCallableDisplay -name "close errors" -callable Errors
   adams.flow.control.CloseCallableDisplay -name "close progressbar" -callable ProgressBar
   adams.flow.control.CloseCallableDisplay -name "close current" -callable Current
 adams.flow.standalone.UFDLConnection
 adams.flow.standalone.SetVariable -name initialize -var-name show_main_menu -var-value true
 adams.flow.standalone.QueueInit -storage-name errors
 adams.flow.standalone.SetVariable -name "log file" -var-name logfile -var-value @{flow_filename_long}.log -value-type FILE_FORWARD_SLASHES -expand-value true
 adams.flow.standalone.Rats
  adams.flow.standalone.Rat -name "error queue" -receiver "adams.flow.standalone.rats.input.DeQueue -storage-name errors" -transmitter adams.flow.standalone.rats.output.DummyOutput -log-generator adams.flow.standalone.rats.log.LogEntryGenerator -scope-handling-variables COPY -scope-handling-storage SHARE
   adams.flow.control.Tee -name "get error"
    adams.flow.transformer.Convert -conversion adams.data.conversion.TextContainerToString
    adams.flow.transformer.StringIndent -indentation " " -num-times 4
    adams.flow.transformer.SetVariable -var-name error
   adams.flow.control.Tee -name "get actor"
    adams.flow.transformer.GetReportValue -field Actor[S]
    adams.flow.transformer.SetVariable -var-name actor
   adams.flow.control.Tee -name "get action"
    adams.flow.transformer.GetReportValue -field Action[S]
    adams.flow.transformer.SetVariable -var-name action
   adams.flow.control.Tee -name "get timestamp"
    adams.flow.transformer.GetReportValue -field Timestamp[S]
    adams.flow.transformer.SetVariable -var-name timestamp
   adams.flow.control.Trigger -name "add to log file"
    adams.flow.source.CombineVariables -expression "\\n@{timestamp}\\n  actor: @{actor}\\n  action: @{action}\\n  error: \\n@{error}" -conversion adams.data.conversion.StringToString
    adams.flow.sink.DumpFile -output @{logfile} -append true
   adams.flow.control.Trigger -name "display error"
    adams.flow.source.CombineVariables -expression "@{timestamp}\\n  actor: @{actor}\\n  action: @{action}\\n  error: \\n@{error}" -conversion adams.data.conversion.StringToString
    adams.flow.sink.CallableSink -callable Errors
 adams.flow.source.Start
 adams.flow.control.WhileLoop -name menu -condition "adams.flow.condition.bool.VariableFlagSet -variable-name show_main_menu"
  adams.flow.standalone.SetVariable -name reset -var-name cancelled -var-value true
  adams.flow.source.Start
  adams.flow.control.CloseCallableDisplay -name "close progressbar" -callable ProgressBar
  adams.flow.control.Trigger -name "menu prompt"
   adams.flow.source.EnterValue -name "Main menu" -message "Backend administration" -selection-values Users -selection-values Teams -selection-values Projects -selection-values Licenses -selection-values "Clear output" -selection-values Exit -use-buttons true -vertical-buttons true
   adams.flow.transformer.SetVariable -var-name main_choice
   adams.flow.transformer.SetVariable -name set -var-name cancelled -var-value false
  adams.flow.control.Block -name "block if cancelled" -condition "adams.flow.condition.bool.VariableFlagSet -variable-name cancelled"
  adams.flow.control.Switch -name "menu actions" -condition "adams.flow.condition.bool.Expression -expression \"\\\\\\\"@{main_choice}\\\\\\\" = \\\\\\\"Users\\\\\\\"\"" -condition "adams.flow.condition.bool.Expression -expression \"\\\\\\\"@{main_choice}\\\\\\\" = \\\\\\\"Teams\\\\\\\"\"" -condition "adams.flow.condition.bool.Expression -expression \"\\\\\\\"@{main_choice}\\\\\\\" = \\\\\\\"Projects\\\\\\\"\"" -condition "adams.flow.condition.bool.Expression -expression \"\\\\\\\"@{main_choice}\\\\\\\" = \\\\\\\"Licenses\\\\\\\"\"" -condition "adams.flow.condition.bool.Expression -expression \"\\\\\\\"@{main_choice}\\\\\\\" = \\\\\\\"Clear output\\\\\\\"\"" -condition "adams.flow.condition.bool.Expression -expression \"\\\\\\\"@{main_choice}\\\\\\\" = \\\\\\\"Exit\\\\\\\"\"" -lenient true
   adams.flow.control.Trigger -name Users
    adams.flow.standalone.SetVariable -name initialize -var-name show_sub_menu -var-value true
    adams.flow.source.Start
    adams.flow.control.CloseCallableDisplay -name "close progressbar" -callable ProgressBar
    adams.flow.control.WhileLoop -name "sub menu" -condition "adams.flow.condition.bool.VariableFlagSet -variable-name show_sub_menu"
     adams.flow.standalone.SetVariable -name reset -var-name cancelled -var-value true
     adams.flow.source.Start
     adams.flow.control.Trigger -name "menu prompt"
      adams.flow.source.EnterValue -name "User administration" -message "Please select operation" -selection-values View -selection-values Add -selection-values Delete -selection-values "Clear output" -selection-values Return -use-buttons true -vertical-buttons true
      adams.flow.transformer.SetVariable -var-name choice
      adams.flow.transformer.SetVariable -name set -var-name cancelled -var-value false
     adams.flow.control.Block -name "block if cancelled" -condition "adams.flow.condition.bool.VariableFlagSet -variable-name cancelled"
     adams.flow.control.Switch -name "menu actions" -condition "adams.flow.condition.bool.Expression -expression \"\\\\\\\"@{choice}\\\\\\\" = \\\\\\\"View\\\\\\\"\"" -condition "adams.flow.condition.bool.Expression -expression \"\\\\\\\"@{choice}\\\\\\\" = \\\\\\\"Add\\\\\\\"\"" -condition "adams.flow.condition.bool.Expression -expression \"\\\\\\\"@{choice}\\\\\\\" = \\\\\\\"Delete\\\\\\\"\"" -condition "adams.flow.condition.bool.Expression -expression \"\\\\\\\"@{choice}\\\\\\\" = \\\\\\\"Clear output\\\\\\\"\"" -condition "adams.flow.condition.bool.Expression -expression \"\\\\\\\"@{choice}\\\\\\\" = \\\\\\\"Return\\\\\\\"\"" -lenient true
      adams.flow.control.Trigger -name View
       adams.flow.source.UFDLSource -action "adams.flow.source.ufdl.ListUsers -active NOT_SET" -use-error-queue true
       adams.flow.sink.CallableSink -callable Current
      adams.flow.control.Trigger -name Add
       adams.flow.source.Start
       adams.flow.control.Trigger -name current
        adams.flow.source.UFDLSource -action "adams.flow.source.ufdl.ListUsers -active NOT_SET" -use-error-queue true
        adams.flow.sink.CallableSink -callable Current
       adams.flow.control.Trigger -name "prompt user"
        adams.flow.standalone.SetVariable -name "restore file" -var-name restore -var-value @{flow_filename_long}-user-add.props -value-type FILE_FORWARD_SLASHES -expand-value true
        adams.flow.standalone.SetVariable -name reset -var-name cancelled -var-value true
        adams.flow.source.EnterManyValues -name "Add user" -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name username -display \"User name\"" -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name password -display Password -type PASSWORD_PLAIN" -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name first_name -display \"First name\"" -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name last_name -display \"Last name\"" -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name email -display Email" -output-type MAP -restoration-enabled true -restoration-file @{restore}
        adams.flow.transformer.MapToVariables
        adams.flow.transformer.SetVariable -name set -var-name cancelled -var-value false
       adams.flow.control.CloseCallableDisplay -name "close current" -callable Current
       adams.flow.control.Block -name "block if cancelled" -condition "adams.flow.condition.bool.VariableFlagSet -variable-name cancelled"
       adams.flow.control.Trigger -name add
        adams.flow.source.UFDLSource -action "adams.flow.source.ufdl.CreateUser -user-name @{username} -password @{password} -first-name @{first_name} -last-name @{last_name} -email @{email}" -use-error-queue true
        adams.flow.sink.CallableSink -callable Info
      adams.flow.control.Trigger -name Delete
       adams.flow.source.UFDLSource -action "adams.flow.source.ufdl.ListUsers -active NOT_SET" -use-error-queue true
       adams.flow.transformer.SpreadSheetSelectSubset -message "Please select users to delete" -allow-search true
       adams.flow.control.Tee -name "# items"
        adams.flow.transformer.SpreadSheetInfo
        adams.flow.transformer.SetVariable -var-name num_items
       adams.flow.control.ConditionalTee -name delete? -condition "adams.flow.condition.bool.PromptUser -message \"Do you want to delete @{num_items} user(s)?\""
        adams.flow.transformer.SpreadSheetVariableRowIterator -columns pk
        adams.flow.control.Trigger -name delete
         adams.flow.source.Variable -var-name pk -conversion adams.data.conversion.StringToInt
         adams.flow.transformer.UFDLTransformer -action adams.flow.transformer.ufdl.DeleteUser -use-error-queue true
         adams.flow.transformer.SetVariable -var-name success
         adams.flow.control.Trigger -name info
          adams.flow.source.CombineVariables -expression "deleted user @{pk}: @{success}" -conversion adams.data.conversion.StringToString
          adams.flow.sink.CallableSink -callable Info
      adams.flow.control.Tee -name "Clear output"
       adams.flow.transformer.CallableTransformer -callable "clear output"
      adams.flow.control.Tee -name Return
       adams.flow.transformer.CallableTransformer -callable "clear output"
       adams.flow.transformer.SetVariable -var-name show_sub_menu -var-value false
   adams.flow.control.Trigger -name Teams
    adams.flow.source.Start
   adams.flow.control.Trigger -name Projects
    adams.flow.source.Start
   adams.flow.control.Trigger -name Licenses
    adams.flow.standalone.SetVariable -name initialize -var-name show_sub_menu -var-value true
    adams.flow.source.Start
    adams.flow.control.CloseCallableDisplay -name "close progressbar" -callable ProgressBar
    adams.flow.control.WhileLoop -name "sub menu" -condition "adams.flow.condition.bool.VariableFlagSet -variable-name show_sub_menu"
     adams.flow.standalone.SetVariable -name reset -var-name cancelled -var-value true
     adams.flow.source.Start
     adams.flow.control.Trigger -name "menu prompt"
      adams.flow.source.EnterValue -name "License administration" -message "Please select operation" -selection-values View -selection-values Add -selection-values Delete -selection-values "Clear output" -selection-values Return -use-buttons true -vertical-buttons true
      adams.flow.transformer.SetVariable -var-name choice
      adams.flow.transformer.SetVariable -name set -var-name cancelled -var-value false
     adams.flow.control.Block -name "block if cancelled" -condition "adams.flow.condition.bool.VariableFlagSet -variable-name cancelled"
     adams.flow.control.Switch -name "menu actions" -condition "adams.flow.condition.bool.Expression -expression \"\\\\\\\"@{choice}\\\\\\\" = \\\\\\\"View\\\\\\\"\"" -condition "adams.flow.condition.bool.Expression -expression \"\\\\\\\"@{choice}\\\\\\\" = \\\\\\\"Add\\\\\\\"\"" -condition "adams.flow.condition.bool.Expression -expression \"\\\\\\\"@{choice}\\\\\\\" = \\\\\\\"Delete\\\\\\\"\"" -condition "adams.flow.condition.bool.Expression -expression \"\\\\\\\"@{choice}\\\\\\\" = \\\\\\\"Clear output\\\\\\\"\"" -condition "adams.flow.condition.bool.Expression -expression \"\\\\\\\"@{choice}\\\\\\\" = \\\\\\\"Return\\\\\\\"\"" -lenient true
      adams.flow.control.Trigger -name View
       adams.flow.source.UFDLSource -action adams.flow.source.ufdl.ListLicenses -use-error-queue true
       adams.flow.sink.CallableSink -callable Current
      adams.flow.control.Trigger -name Add
       adams.flow.source.Start
       adams.flow.control.Trigger -name current
        adams.flow.source.UFDLSource -action adams.flow.source.ufdl.ListLicenses -use-error-queue true
        adams.flow.sink.CallableSink -callable Current
       adams.flow.control.Trigger -name "prompt user"
        adams.flow.standalone.SetVariable -name "restore file" -var-name restore -var-value @{flow_filename_long}-license-add.props -value-type FILE_FORWARD_SLASHES -expand-value true
        adams.flow.standalone.SetVariable -name reset -var-name cancelled -var-value true
        adams.flow.source.EnterManyValues -name "Add license" -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name name -display Name" -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name url -display URL" -output-type MAP -restoration-enabled true -restoration-file @{restore}
        adams.flow.transformer.MapToVariables
        adams.flow.transformer.SetVariable -name set -var-name cancelled -var-value false
       adams.flow.control.CloseCallableDisplay -name "close current" -callable Current
       adams.flow.control.Block -name "block if cancelled" -condition "adams.flow.condition.bool.VariableFlagSet -variable-name cancelled"
       adams.flow.control.Trigger -name add
        adams.flow.source.UFDLSource -action "adams.flow.source.ufdl.CreateLicense -name @{name} -url @{url}" -use-error-queue true
        adams.flow.transformer.SetStorageValue -storage-name license
        adams.flow.control.Trigger -name permissions
         adams.flow.source.SelectObjects -name "Select permissions" -output-array true -super-class com.github.waikatoufdl.ufdl4j.action.Licenses$Permission -short-title true
         adams.flow.control.ArrayProcess
          adams.flow.transformer.Convert -conversion adams.data.conversion.AnyToString
         adams.flow.transformer.StringJoin -glue " "
         adams.flow.transformer.SetVariable -var-name permissions
        adams.flow.control.Trigger -name conditions
         adams.flow.source.SelectObjects -name "Select conditions" -output-array true -super-class com.github.waikatoufdl.ufdl4j.action.Licenses$Condition -short-title true
         adams.flow.control.ArrayProcess
          adams.flow.transformer.Convert -conversion adams.data.conversion.AnyToString
         adams.flow.transformer.StringJoin -glue " "
         adams.flow.transformer.SetVariable -var-name conditions
        adams.flow.control.Trigger -name limitations
         adams.flow.source.SelectObjects -name "Select limitations" -output-array true -super-class com.github.waikatoufdl.ufdl4j.action.Licenses$Limitation -short-title true
         adams.flow.control.ArrayProcess
          adams.flow.transformer.Convert -conversion adams.data.conversion.AnyToString
         adams.flow.transformer.StringJoin -glue " "
         adams.flow.transformer.SetVariable -var-name limitations
        adams.flow.control.Trigger -name display
         adams.flow.source.StorageValue -storage-name license -conversion adams.data.conversion.UnknownToUnknown
         adams.flow.transformer.UFDLTransformer -action "adams.flow.transformer.ufdl.UpdateLicenseSubDescriptors -permission @{permissions} -condition @{conditions} -limitation @{limitations}" -use-error-queue true
         adams.flow.sink.CallableSink -callable Info
      adams.flow.control.Trigger -name Delete
       adams.flow.source.UFDLSource -action adams.flow.source.ufdl.ListLicenses -use-error-queue true
       adams.flow.transformer.SpreadSheetSelectSubset -message "Please select users to delete" -allow-search true
       adams.flow.control.Tee -name "# items"
        adams.flow.transformer.SpreadSheetInfo
        adams.flow.transformer.SetVariable -var-name num_items
       adams.flow.control.ConditionalTee -name delete? -condition "adams.flow.condition.bool.PromptUser -message \"Do you want to delete @{num_items} license(s)?\""
        adams.flow.transformer.SpreadSheetVariableRowIterator -columns pk
        adams.flow.control.Trigger -name delete
         adams.flow.source.Variable -var-name pk -conversion adams.data.conversion.StringToInt
         adams.flow.transformer.UFDLTransformer -action adams.flow.transformer.ufdl.DeleteLicense -use-error-queue true
         adams.flow.transformer.SetVariable -var-name success
         adams.flow.control.Trigger -name info
          adams.flow.source.CombineVariables -expression "deleted license @{pk}: @{success}" -conversion adams.data.conversion.StringToString
          adams.flow.sink.CallableSink -callable Info
      adams.flow.control.Tee -name "Clear output"
       adams.flow.transformer.CallableTransformer -callable "clear output"
      adams.flow.control.Tee -name Return
       adams.flow.transformer.CallableTransformer -callable "clear output"
       adams.flow.transformer.SetVariable -var-name show_sub_menu -var-value false
   adams.flow.control.Tee -name "Clear output"
    adams.flow.transformer.CallableTransformer -callable "clear output"
   adams.flow.control.Tee -name Exit
    adams.flow.transformer.CallableTransformer -callable "clear output"
    adams.flow.transformer.SetVariable -var-name show_main_menu -var-value false