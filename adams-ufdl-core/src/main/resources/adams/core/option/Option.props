# Configuration file for registering custom hooks for objects that special
# constructors and string representations.
#
# Format:
# An Option needs three entries:
# 1. whether the hook is enabled ("classname=true|false"), e.g.:
#    java.io.File=true
# 2. the "hook" for turning the object into a string ("classname#method"), e.g.:
#    java.io.File#toString=adams.core.option.parsing.FileParsing#toString
# 3. the "hook" for creating an object from the string ("classname#method"), e.g.:
#    java.io.File#valueOf=adams.core.option.parsing.FileParsing#valueOf
#
# Other options are stored in here as well, but they must be prefixed with
# "option.".
#
#
# Author: FracPete (fracpete at waikato dot ac dot nz)

#########
# hooks #
#########

# UFDLJobOutput objects
adams.flow.core.UFDLJobOutput=true
adams.flow.core.UFDLJobOutput#toString=adams.core.option.parsing.BaseObjectParsing#toString
adams.flow.core.UFDLJobOutput#valueOf=adams.core.option.parsing.BaseObjectParsing#valueOf

# UFDLJobTemplateInput objects
adams.flow.core.UFDLJobTemplateInput=true
adams.flow.core.UFDLJobTemplateInput#toString=adams.core.option.parsing.BaseObjectParsing#toString
adams.flow.core.UFDLJobTemplateInput#valueOf=adams.core.option.parsing.BaseObjectParsing#valueOf

# UFDLJobTemplateParameter objects
adams.flow.core.UFDLJobTemplateParameter=true
adams.flow.core.UFDLJobTemplateParameter#toString=adams.core.option.parsing.BaseObjectParsing#toString
adams.flow.core.UFDLJobTemplateParameter#valueOf=adams.core.option.parsing.BaseObjectParsing#valueOf
