# Project: adams
# Date: 2020-08-28 11:10:11
# User: fracpete
# Charset: UTF-8
# Modules: adams-audio,adams-compress,adams-core,adams-event,adams-ffmpeg,adams-imaging,adams-json,adams-meta,adams-net,adams-rats-core,adams-spreadsheet,adams-terminal,adams-ufdl-core,adams-ufdl-image,adams-ufdl-speech,adams-xml
#
adams.flow.control.Flow -annotation "Populates the database with users, teams and projects.\\nUses host/user/password from the global UFDL Preferences." -flow-execution-listener adams.flow.execution.NullListener -flow-restart-manager adams.flow.control.flowrestart.NullManager
 adams.flow.standalone.CallableActors
  adams.flow.control.Sequence -name Info
   adams.flow.sink.Display -name Info -short-title true -display-type adams.flow.core.displaytype.Default -writer adams.data.io.output.NullWriter
  adams.flow.control.Sequence -name Errors
   adams.flow.sink.HistoryDisplay -name Errors -short-title true -display-type adams.flow.core.displaytype.Default -y -3
 adams.flow.standalone.UFDLConnection
 adams.flow.standalone.QueueInit -storage-name errors
 adams.flow.standalone.SetVariable -name "log file" -var-name logfile -var-value @{flow_filename_long}.log -value-type FILE_FORWARD_SLASHES -expand-value true
 adams.flow.standalone.Rats
  adams.flow.standalone.Rat -name "error queue" -receiver "adams.flow.standalone.rats.input.DeQueue -storage-name errors" -transmitter adams.flow.standalone.rats.output.DummyOutput -log-generator adams.flow.standalone.rats.log.LogEntryGenerator -scope-handling-variables COPY -scope-handling-storage SHARE
   adams.flow.control.Tee -name "get error"
    adams.flow.transformer.Convert -conversion adams.data.conversion.TextContainerToString
    adams.flow.transformer.StringIndent -indentation " " -num-times 4
    adams.flow.transformer.SetVariable -var-name error
   adams.flow.control.Tee -name "get actor"
    adams.flow.transformer.GetReportValue -field Actor[S]
    adams.flow.transformer.SetVariable -var-name actor
   adams.flow.control.Tee -name "get action"
    adams.flow.transformer.GetReportValue -field Action[S]
    adams.flow.transformer.SetVariable -var-name action
   adams.flow.control.Tee -name "get timestamp"
    adams.flow.transformer.GetReportValue -field Timestamp[S]
    adams.flow.transformer.SetVariable -var-name timestamp
   adams.flow.control.Trigger -name "add to log file"
    adams.flow.source.CombineVariables -expression "\\n@{timestamp}\\n  actor: @{actor}\\n  action: @{action}\\n  error: \\n@{error}" -conversion adams.data.conversion.StringToString
    adams.flow.sink.DumpFile -output @{logfile} -append true
   adams.flow.control.Trigger -name "display error"
    adams.flow.source.CombineVariables -expression "@{timestamp}\\n  actor: @{actor}\\n  action: @{action}\\n  error: \\n@{error}" -conversion adams.data.conversion.StringToString
    adams.flow.sink.CallableSink -callable Errors
 adams.flow.source.Start
 adams.flow.control.Trigger -name "prompt user"
  adams.flow.standalone.SetVariable -name "restore file" -var-name restore -var-value @{flow_filename_long}.props -value-type FILE_FORWARD_SLASHES -expand-value true
  adams.flow.source.EnterManyValues -stop-if-canceled true -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name user_file -display \"CSV with users\" -help \"columns: username,first_name,last_name,email\" -type FILE_ABSOLUTE -default-value . -use-forward-slashes true" -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name team_file -display \"CSV with teams\" -help \"columns: name,members (members contains semi-colon separated user names)\" -type FILE_ABSOLUTE -default-value . -use-forward-slashes true" -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name project_file -display \"CSV with projects\" -help \"columns: name,team\" -type FILE_ABSOLUTE -default-value . -use-forward-slashes true" -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name license_file -display \"CSV with licenses\" -help \"columns: name,domains,permissions,limitations,conditions (use semi-colon to separate multiple values in a column)\" -type FILE_ABSOLUTE -default-value . -use-forward-slashes true" -output-type MAP -non-interactive true -restoration-enabled true -restoration-file @{restore}
  adams.flow.transformer.MapToVariables
 adams.flow.control.Trigger -name users
  adams.flow.source.Variable -var-name user_file -conversion adams.data.conversion.StringToString
  adams.flow.control.Trigger -name info
   adams.flow.source.CombineVariables -expression "--> users" -conversion adams.data.conversion.StringToString
   adams.flow.sink.CallableSink -callable Info
  adams.flow.transformer.SpreadSheetFileReader -reader "adams.data.io.input.CsvSpreadSheetReader -data-row-type adams.data.spreadsheet.DenseDataRow -spreadsheet-type adams.data.spreadsheet.DefaultSpreadSheet"
  adams.flow.transformer.SpreadSheetVariableRowIterator
  adams.flow.control.Trigger -name "create user"
   adams.flow.source.UFDLSource -action "adams.flow.source.ufdl.CreateUser -user-name @{username} -password @{password} -first-name @{first_name} -last-name @{last_name} -email @{email}" -use-error-queue true
   adams.flow.sink.CallableSink -callable Info
 adams.flow.control.Trigger -name teams
  adams.flow.source.Variable -var-name team_file -conversion adams.data.conversion.StringToString
  adams.flow.control.Trigger -name info
   adams.flow.source.CombineVariables -expression "--> teams" -conversion adams.data.conversion.StringToString
   adams.flow.sink.CallableSink -callable Info
  adams.flow.transformer.SpreadSheetFileReader -reader "adams.data.io.input.CsvSpreadSheetReader -data-row-type adams.data.spreadsheet.DenseDataRow -spreadsheet-type adams.data.spreadsheet.DefaultSpreadSheet"
  adams.flow.transformer.SpreadSheetVariableRowIterator
  adams.flow.control.Trigger -name "create team"
   adams.flow.source.UFDLSource -action "adams.flow.source.ufdl.CreateTeam -name @{name}" -use-error-queue true
   adams.flow.transformer.SetStorageValue -storage-name team
   adams.flow.sink.CallableSink -callable Info
  adams.flow.control.Trigger -name "iterate members"
   adams.flow.source.Variable -var-name members -conversion adams.data.conversion.StringToString
   adams.flow.transformer.StringSplit -expression ;
   adams.flow.transformer.ArrayToSequence
   adams.flow.transformer.StringSplit -name "StringSplit (2)" -expression :
   adams.flow.control.Tee -name name
    adams.flow.transformer.GetArrayElement
    adams.flow.transformer.SetVariable -var-name member_name
   adams.flow.control.Trigger -name id
    adams.flow.source.Variable -var-name member_name -conversion adams.data.conversion.StringToString
    adams.flow.transformer.UFDLTransformer -action adams.flow.transformer.ufdl.LoadUser -use-error-queue true
    adams.flow.transformer.Convert -conversion adams.data.conversion.UFDLUserToSpreadSheet
    adams.flow.transformer.SpreadSheetGetCell -col pk
    adams.flow.transformer.SetVariable -var-name member_id
   adams.flow.control.Tee -name permission
    adams.flow.transformer.GetArrayElement -index 2
    adams.flow.transformer.SetVariable -var-name member_permission
   adams.flow.control.Trigger -name "add member"
    adams.flow.source.StorageValue -storage-name team -conversion adams.data.conversion.UnknownToUnknown
    adams.flow.transformer.UFDLTransformer -action "adams.flow.transformer.ufdl.AddTeamMember -member @{member_id} -permissions @{member_permission}" -use-error-queue true
    adams.flow.sink.CallableSink -callable Info
 adams.flow.control.Trigger -name projects
  adams.flow.source.Variable -var-name project_file -conversion adams.data.conversion.StringToString
  adams.flow.control.Trigger -name info
   adams.flow.source.CombineVariables -expression "--> projects" -conversion adams.data.conversion.StringToString
   adams.flow.sink.CallableSink -callable Info
  adams.flow.transformer.SpreadSheetFileReader -reader "adams.data.io.input.CsvSpreadSheetReader -data-row-type adams.data.spreadsheet.DenseDataRow -spreadsheet-type adams.data.spreadsheet.DefaultSpreadSheet"
  adams.flow.transformer.SpreadSheetVariableRowIterator
  adams.flow.control.Trigger -name "team id"
   adams.flow.source.Variable -var-name team -conversion adams.data.conversion.StringToString
   adams.flow.transformer.UFDLTransformer -action adams.flow.transformer.ufdl.LoadTeam -use-error-queue true
   adams.flow.transformer.Convert -conversion adams.data.conversion.UFDLTeamToSpreadSheet
   adams.flow.transformer.SpreadSheetGetCell -col pk
   adams.flow.transformer.SetVariable -var-name team_id
  adams.flow.control.Trigger -name "create project"
   adams.flow.source.UFDLSource -action "adams.flow.source.ufdl.CreateProject -name @{name} -team @{team_id}" -use-error-queue true
   adams.flow.sink.CallableSink -callable Info
 adams.flow.control.Trigger -name licenses
  adams.flow.source.Variable -var-name license_file -conversion adams.data.conversion.StringToString
  adams.flow.control.Trigger -name info
   adams.flow.source.CombineVariables -expression "--> licenses" -conversion adams.data.conversion.StringToString
   adams.flow.sink.CallableSink -callable Info
  adams.flow.transformer.SpreadSheetFileReader -reader "adams.data.io.input.CsvSpreadSheetReader -data-row-type adams.data.spreadsheet.DenseDataRow -spreadsheet-type adams.data.spreadsheet.DefaultSpreadSheet"
  adams.flow.transformer.SpreadSheetConvertCells -finder "adams.data.spreadsheet.cellfinder.CellRange -columns domains,permissions,limitations,conditions" -conversion "adams.data.conversion.StringExpression -expression \"substitute(X, \\\\\\\";\\\\\\\", \\\\\\\" \\\\\\\")\""
  adams.flow.transformer.SpreadSheetVariableRowIterator
  adams.flow.control.ConditionalTee -name "no url?" -condition "adams.flow.condition.bool.Expression -expression \"\\\\\\\"@{url}\\\\\\\" = \\\\\\\"\\\\\\\"\""
   adams.flow.transformer.SetVariable -var-name url -var-value http://localhost
  adams.flow.control.Trigger -name "create project"
   adams.flow.source.UFDLSource -action "adams.flow.source.ufdl.CreateLicense -name @{name} -url @{url}" -use-error-queue true
   adams.flow.transformer.SetStorageValue -storage-name license
   adams.flow.sink.CallableSink -callable Info
  adams.flow.control.Trigger -name update
   adams.flow.source.StorageValue -storage-name license -conversion adams.data.conversion.UnknownToUnknown
   adams.flow.transformer.UFDLTransformer -action "adams.flow.transformer.ufdl.UpdateLicenseSubDescriptors -domain @{domains} -permission @{permissions} -condition @{conditions} -limitation @{limitations}" -use-error-queue true
   adams.flow.sink.CallableSink -callable Info